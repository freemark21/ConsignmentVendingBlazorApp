@page "/Returns"
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IReturnsData _db 
@inject Services.ApiService apiService
@inject NavigationManager NavigationManager

<h1>Returns</h1>

@if (returns is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-danger">Submit To SXe</button>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Cono</th>
                <th>Customer Number</th>
                <th>Ship To</th>
                <th>Warehouse</th>
                <th>UserID</th>
                <th>Customer Part#</th>
                <th>Product Name</th>
                <th>Replenex Part#</th>
                <th>Qty</th>
                <th>Unit of Issue</th>
                <th>SupplyPro Price</th>
                <th>SupplyPro Qty Date</th>
                <th>SupplyPro Qty</th>
                <th>Whse Qty Available</th>
                <th>Actual</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in returns)
            {
                int actual = item.WhseQtyAvail - item.SupplyProQty;
            <tr>
                <td>@item.ID</td>
                <td>@item.Cono</td>
                <td>@item.CustomerNumber</td>
                <td>@item.ShipTo</td>
                <td>@item.Whse</td>
                <td>@item.UserID</td>
                <td>@item.CustomerPartNum</td>
                <td>@item.ProductName</td>
                <td>@item.ReplenexNumber</td>
                <td>@item.Qty</td>
                <td>@item.UnitOfIssue</td>
                <td>@item.SupplyProPrice</td>
                <td>@item.SupplyProQtyDate</td>
                <td>@item.SupplyProQty</td>
                <td>@item.WhseQtyAvail</td>
                <td>@actual</td>
                <td><a class="btn btn-primary" href="/editreturn/@item.ID">Edit</a>
                <a class="btn btn-danger" href="/deletereturn/@item.ID" style="margin-top:5%">Delete</a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ReturnModel> returns;
    

    protected override async Task OnInitializedAsync()
    {
        returns = await _db.GetReturns();
        var token = await apiService.GetToken();
    }

}
